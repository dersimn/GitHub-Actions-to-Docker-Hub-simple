name: Docker build and publish

on:
  workflow_dispatch:
  schedule:
    - cron:  '27 4 * * *'
  push:
    branches:
      # Run on every branch
      - '**'
      # Except branches beginning with:
      - '!fail/**'
      - '!dead-end/**'
      - '!trash/**'
    tags:
      - '**'

env:
  # Base image, usually first line of Dockerfile e.g.: `FROM alpine:3`
  BASE_IMAGE: alpine:3
  BUILD_PLATFORMS: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
  # Target image without tags, e.g.: `dersimn/github-actions-to-docker-hub-simple`
  TARGET_IMAGE: dersimn/github-actions-to-docker-hub-simple
  #TARGET_IMAGE: ${{ github.repository }}  # only if username + repository is all lowercase and the same as user + repo on Docker Hubs

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Since Check step is only run by schedule and schedule always uses default branch,
      # we don't need to check for multiple target images with different tags or similar.
      - name: Check if update for base image is available
        id: check
        uses: lucacome/docker-image-update-checker@v1
        if: ${{ github.event_name == 'schedule' }}
        with:
          # For images without tag, latest will be checked.
          base-image: ${{ env.BASE_IMAGE }}
          image: ${{ env.TARGET_IMAGE }}
          platforms: ${{ env.BUILD_PLATFORMS }}

      - name: Decide to continue or skip
        id: should-build
        # If check-step was skipped, output variable will be empty
        run: echo continue=${{ (steps.check.outputs.needs-updating == 'true') || (github.event_name != 'schedule') }} >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3
        if: ${{ steps.should-build.outputs.continue == 'true' }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        if: ${{ steps.should-build.outputs.continue == 'true' }}
        with:
          images: ${{ env.TARGET_IMAGE }}
          flavor: |
            latest=false
          tags: |
            # Latest tag only for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # Git branch or tag name
            type=ref,event=branch
            type=ref,event=tag
            # Git short SHA: master-ad132f5
            # Makes sense only when used with branches,
            # since tags are already associated with a specific commit.
            type=sha,prefix={{branch}}-,enable=${{ github.ref_type == 'branch' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: ${{ steps.should-build.outputs.continue == 'true' }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: ${{ steps.should-build.outputs.continue == 'true' }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ steps.should-build.outputs.continue == 'true' }}
        with:
          username: ${{ vars.DOCKERHUB_USERNAME || github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        if: ${{ steps.should-build.outputs.continue == 'true' }}
        with:
          push: true
          context: .
          platforms: ${{ env.BUILD_PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
